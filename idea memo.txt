#Graph
트리의 지름 : 무방향그래프일경우 임의 v에서 가장먼 정점 u를 탐색한다음 u에서 다시 가장먼 정점까지의 거리 = 트리의 지름

길찾기는 bfs가 유리 dfs는 너무 많은 갈래가 있을경우 시간초과 위험

#DP
DP[i] = DP[i-1] + 최적해

i번째의 선택이 여러개면
각 선택에 따른 최적해를 고르자 dp[i][0] [1] [2]... //RGB 거리 2(17404)

모든 선택을 고려할때
같은 선택을 여러번 할 수있다면
50을 쪼개는 방법처럼 생각해보자.

가방 알고리즘 : 가치, 무게의 최대치를구할뿐 다른건없다. 말장난에 속지말자 ㅠ

식이 주어지는 경우 : 식을 단순화시켜보자

FAST IO : fread(char *buf, sizeof(type), input_len, stdin);
큰 배열이 필요할 경우 전역으로 선언하는것이 좋으나
constexpr 1<<16 과같은 입력용 크기로 적절히 선언하고 지역으로 선언하면 메모리에 잡히지않아서 백준기준 메모리사용량이 적게잡히는듯